/**
 * # module/stitches
 *
 * Constructor for the stitches module, which encapsulates all of the UI
 * functionality. Instantiated with a DOM element, into which all of the
 * markup is injected and to which the behaviors are attached. Typically
 * used in a DOM ready callback
 *
 * > http://draeton.github.io/stitches<br/>
 * > Copyright 2013 Matthew Cobbs<br/>
 * > Licensed under the MIT license.
 */

define(["wrap/jquery","wrap/modernizr","../../../libs/store/store","util/util","util/templates","manager/file","manager/layout","manager/stylesheet","module/drop-box","module/canvas","module/toolbar","module/palette"],function(e,t,n,r,i,s,o,u,a,f,l,c){"use strict";var h={layout:"compact",prefix:"sprite",padding:5,uri:!1,stylesheet:"css"},p=function(t,n){this.$element=e(t),this.settings=e.extend({},h,n),this.init()};return p.prototype={constructor:p,init:function(){this.configure(),this.render(),this.test(),this.bind(),this.setDropBox(),this.setToolbar(),this.setImages(),this.setCanvas(),this.setManagers(),this.setPalettes(),this.canvas.init()},configure:function(){var t;n&&!n.disabled&&(t=n.get("stitches-settings")),t&&(this.settings=e.extend(this.settings,t))},render:function(){var e=i.stitches({});this.$element.append(e),this.$overlay=this.$element.find(".stitches-overlay"),this.$dropBox=this.$element.find(".stitches-drop-box"),this.$toolbar=this.$element.find(".stitches-toolbar"),this.$canvas=this.$element.find(".stitches-canvas"),this.$progress=this.$element.find(".stitches-progress .progress"),this.$progressBar=this.$element.find(".stitches-progress .bar"),this.$about=this.$element.find(".stitches-about"),this.$downloads=this.$element.find(".stitches-downloads"),this.$settings=this.$element.find(".stitches-settings"),this.$properties=this.$element.find(".stitches-properties")},test:function(){this.hasFileInput=this.$element.find("input.file").length},bind:function(){this.$element.on("show-overlay",e.proxy(this.showOverlay,this)),this.$element.on("hide-overlay",e.proxy(this.hideOverlay,this)),this.$element.on("open-about",e.proxy(this.openAbout,this)),this.$element.on("close-about",e.proxy(this.closeAbout,this)),this.$element.on("open-downloads",e.proxy(this.openDownloads,this)),this.$element.on("close-downloads",e.proxy(this.closeDownloads,this)),this.$element.on("open-settings",e.proxy(this.openSettings,this)),this.$element.on("close-settings",e.proxy(this.closeSettings,this)),this.$element.on("open-properties",e.proxy(this.openProperties,this)),this.$element.on("close-properties",e.proxy(this.closeProperties,this)),this.$element.on("close-palettes",e.proxy(this.closePalettes,this)),this.$element.on("process-files",e.proxy(this.processFiles,this)),this.$element.on("update-toolbar",e.proxy(this.updateToolbar,this)),this.$element.on("update-settings",e.proxy(this.updateSettingsPalette,this)),this.$element.on("update-downloads",e.proxy(this.updateDownloadsPalette,this)),this.$element.on("generate-sheets",e.proxy(this.generateSheets,this)),this.$element.on("error",e.proxy(this.errorHandler,this))},setDropBox:function(){this.dropBox=new a(this.$dropBox)},setManagers:function(){s.set({onload:e.proxy(this.canvas.createSprite,this.canvas),onprogress:e.proxy(this.updateProgress,this)}),o.set(this.settings.layout),u.set(this.settings.stylesheet)},setImages:function(){this.images=this.$element.find("> img").get()},setCanvas:function(){this.canvas=new f(this.$canvas,{images:this.images,padding:this.settings.padding},{onprogress:e.proxy(this.updateProgress,this)})},setToolbar:function(){var e=this;this.toolbar=new l(this.$toolbar,{name:"toolbar",actions:{open:{change:function(t){var n=e.$toolbar.find("input[type=file]"),r=n.clone(!0).val(""),i=t.target.files;e.$element.trigger("process-files",[i]),n.replaceWith(r)}},settings:{click:function(t){e.$element.trigger("open-settings")}},reset:{click:function(t){e.canvas.reset()}},clear:{click:function(t){e.canvas.clear()}},downloads:{click:function(t){e.$element.trigger("open-downloads")}},about:{click:function(t){e.$element.trigger("open-about")}}}})},setPalettes:function(){var t=this,n=new c(this.$about,{name:"about",visible:!0,actions:{close:{click:function(e){this.close()}}}}),r=new c(this.$downloads,{name:"downloads",visible:!1,actions:{close:{click:function(e){this.close()}}}}),i=new c(this.$settings,{name:"settings",visible:!1,actions:{close:{click:function(e){t.$element.trigger("close-settings")}}},fields:{layout:{change:function(e){var n=this.$element.find("input[name=layout]:checked"),r=n.val();this.source.layout=r,o.set(r),t.updateSettings()}},stylesheet:{change:function(e){var n=this.$element.find("input[name=stylesheet]:checked"),r=n.val();t.settings.stylesheet=r,u.set(r),t.updateSettings()}},prefix:{"input blur":function(n){var r=e(n.currentTarget).val();this.source.prefix=r,t.updateSettings()}},padding:{"input blur":function(n){var r=e(n.currentTarget).val();this.source.padding=r,t.canvas.padding=r,e.map(t.canvas.sprites,function(e){e.configure({padding:r})}),t.updateSettings()}},uri:{change:function(n){var r=e(n.currentTarget).is(":checked");this.source.uri=r,t.updateSettings()}},"import":{blur:function(n){var r=e(n.currentTarget),i=r.parents(".control-group"),s=r.val(),o;i.removeClass("error");if(s)try{o=JSON.parse(s),t.importData(o)}catch(u){i.addClass("error"),t.$element.trigger("error",[u])}else t.updateProgress(1,"success")}}}}),s=new c(this.$properties,{name:"properties",visible:!1,actions:{close:{click:function(e){t.$element.trigger("close-properties")}},remove:{click:function(e){var n=this.source;t.canvas.remove(n)}}},fields:{name:{"input blur":function(t){var n=e(t.currentTarget),r=this.source,i=n.val(),s=r.cleanName(i);this.source.name=s,i!==s&&n.val(s)}}}});this.palettes={about:n,downloads:r,settings:i,properties:s}},updateSettings:function(){this.showOverlay(),this.canvas.reset(),n&&!n.disabled&&n.set("stitches-settings",this.settings)},showOverlay:function(e){this.$overlay.fadeTo("fast",.4)},hideOverlay:function(e){this.$overlay.fadeOut("fast")},openAbout:function(e){this.closePalettes(),this.palettes.about.open()},closeAbout:function(e){this.palettes.about.visible&&this.palettes.about.close()},openDownloads:function(e){this.closePalettes(),this.palettes.downloads.open()},closeDownloads:function(e){this.palettes.downloads.visible&&this.palettes.downloads.close()},openSettings:function(e){this.closePalettes(),this.palettes.settings.configure({source:this.settings,inputs:{layout:this.settings.layout,stylesheet:this.settings.stylesheet,prefix:this.settings.prefix,padding:this.settings.padding,uri:this.settings.uri}}),this.palettes.settings.open()},closeSettings:function(e){var t=this.$settings.find("ul.nav-tabs"),n=t.find("li:first-child a"),r=this.$settings.find(":input[name=import]"),i=r.parents(".control-group");n.click(),r.val(""),i.removeClass("error"),this.palettes.settings.visible&&this.palettes.settings.close()},openProperties:function(e,t){this.closePalettes(),this.palettes.properties.configure({source:t,inputs:{name:t.name,x:t.left(),y:t.top()}}),this.palettes.properties.open()},closeProperties:function(e){this.palettes.properties.visible&&(this.palettes.properties.close(),this.canvas.$element.trigger("clear-active",[!0]))},closePalettes:function(e){this.closeAbout(),this.closeDownloads(),this.closeSettings(),this.closeProperties()},processFiles:function(e,t){s.processFiles(t)},updateToolbar:function(e){var t=this.toolbar,n=this.canvas;n.sprites.length?t.enable("reset clear downloads"):t.disable("reset clear downloads"),this.hasFileInput?t.enable("open"):t.disable("open")},updateSettingsPalette:function(e){var t=this.$settings.find(".downloads-export");t.attr({href:"data:text/plain,"+encodeURIComponent(JSON.stringify(this)),target:"_blank"})},updateDownloadsPalette:function(t){var n=this.$downloads.find("section"),r=this.$downloads.find(".downloads-spritesheet"),s=this.$downloads.find(".downloads-stylesheet"),o=i.downloads({prefix:this.settings.prefix,spritesheet:this.spritesheet,stylesheet:this.stylesheet,stylesheetWithUri:this.stylesheetWithUri,stylesheetType:u.type,stylesheetLines:this.stylesheet.split("\n").length,markup:this.markup,markupLines:this.markup.split("\n").length,markupTooltip:this.markupTooltip});n.html(o),r.attr({href:this.spritesheet,target:"_blank"}),s.attr({href:"data:text/plain,"+encodeURIComponent(this.stylesheet),target:"_blank"}),e.fn.tooltip&&n.find("[data-toggle=tooltip]").tooltip()},updateProgress:function(e,t){var n=Math.ceil(e*100);n===100&&t!=="danger"&&t!=="warning"&&(t="success"),t&&this.$progress.attr({"class":"progress progress-"+t}),this.$progressBar.css({width:n+"%"})},generateSheets:function(e){this.spritesheet=o.getSpritesheet({sprites:this.canvas.sprites,dimensions:this.canvas.dimensions}),this.stylesheetWithUri=u.getStylesheet({sprites:this.canvas.sprites,spritesheet:this.spritesheet,prefix:this.settings.prefix,uri:!0}),this.markup=u.getMarkup({sprites:this.canvas.sprites,prefix:this.settings.prefix}),this.markupTooltip=u.getMarkup({sprites:this.canvas.sprites,prefix:this.settings.prefix,tooltip:!0}),this.settings.uri?this.stylesheet=this.stylesheetWithUri:this.stylesheet=u.getStylesheet({sprites:this.canvas.sprites,spritesheet:this.spritesheet,prefix:this.settings.prefix,uri:this.settings.uri}),this.$element.trigger("update-toolbar"),this.$element.trigger("update-settings"),this.$element.trigger("update-downloads"),this.updateProgress(1,"success")},errorHandler:function(e,t,n){this.updateProgress(1,n||"warning")},toJSON:function(){return{settings:this.settings,canvas:this.canvas.toJSON()}},importData:function(t){var n=this,r=t.settings||{},i=t.canvas||{},s=i.sprites||[];this.settings=e.extend({},h,r),o.set(this.settings.layout),u.set(this.settings.stylesheet),this.updateSettings(),this.canvas.clear(),this.canvas.settings.padding=this.settings.padding,e.map(s,function(e){n.canvas.createSprite(e.name,e.src)}),this.updateProgress(1,"success")}},p});